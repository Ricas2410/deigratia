# Generated by Django 5.1.6 on 2025-06-04 00:35

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AssessmentWeightConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_default', models.BooleanField(default=True)),
                ('academic_term', models.CharField(blank=True, max_length=50, null=True)),
                ('academic_year', models.CharField(blank=True, max_length=20, null=True)),
                ('include_classwork', models.BooleanField(default=True)),
                ('include_quizzes', models.BooleanField(default=False)),
                ('include_tests', models.BooleanField(default=False)),
                ('include_midterm', models.BooleanField(default=True)),
                ('include_projects', models.BooleanField(default=True)),
                ('include_final_exam', models.BooleanField(default=True)),
                ('include_attendance', models.BooleanField(default=False)),
                ('classwork_weight', models.DecimalField(decimal_places=2, default=10.0, help_text='Weight percentage for classwork (10%)', max_digits=5)),
                ('quiz_weight', models.DecimalField(decimal_places=2, default=0.0, help_text='Weight percentage for quizzes (0%)', max_digits=5)),
                ('test_weight', models.DecimalField(decimal_places=2, default=0.0, help_text='Weight percentage for tests (0%)', max_digits=5)),
                ('midterm_weight', models.DecimalField(decimal_places=2, default=20.0, help_text='Weight percentage for mid-term exams (20%)', max_digits=5)),
                ('project_weight', models.DecimalField(decimal_places=2, default=10.0, help_text='Weight percentage for project work (10%)', max_digits=5)),
                ('final_exam_weight', models.DecimalField(decimal_places=2, default=60.0, help_text='Weight percentage for final exams (60%)', max_digits=5)),
                ('attendance_weight', models.DecimalField(decimal_places=2, default=0.0, help_text='Weight percentage for attendance (0%)', max_digits=5)),
                ('endterm_weight', models.DecimalField(decimal_places=2, default=60.0, help_text='Weight percentage for end of term exams (60%)', max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('assignment_type', models.CharField(choices=[('HOMEWORK', 'Homework'), ('QUIZ', 'Quiz'), ('TEST', 'Test'), ('EXAM', 'Exam'), ('PROJECT', 'Project')], default='HOMEWORK', max_length=20)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PUBLISHED', 'Published'), ('ARCHIVED', 'Archived')], default='DRAFT', max_length=20)),
                ('file_attachment', models.FileField(blank=True, null=True, upload_to='assignments/')),
                ('max_score', models.PositiveIntegerField(default=100)),
                ('due_date', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('time_limit', models.PositiveIntegerField(blank=True, help_text='Time limit in minutes (for quizzes only). When set, students will have this amount of time to complete the quiz once started.', null=True)),
                ('questions_to_display', models.PositiveIntegerField(blank=True, help_text='Number of questions to randomly select from the question bank. Leave blank to show all questions.', null=True)),
                ('randomize_questions', models.BooleanField(default=True, help_text='Whether to randomize the order of questions.')),
                ('randomize_choices', models.BooleanField(default=True, help_text='Whether to randomize the order of multiple choice answers.')),
                ('attempt_limit', models.PositiveIntegerField(default=1, help_text='Number of attempts allowed (0 for unlimited)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice_text', models.TextField()),
                ('is_correct', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade_type', models.CharField(choices=[('ASSIGNMENT', 'Assignment'), ('QUIZ', 'Quiz'), ('TEST', 'Test'), ('EXAM', 'Exam'), ('PROJECT', 'Project'), ('TERM', 'Term Grade')], max_length=20)),
                ('score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('max_score', models.PositiveIntegerField(default=100)),
                ('letter_grade', models.CharField(blank=True, max_length=2, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('term', models.CharField(blank=True, max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='GradeThreshold',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('letter_grade', models.CharField(max_length=5)),
                ('min_percent', models.DecimalField(decimal_places=2, max_digits=5)),
                ('max_percent', models.DecimalField(decimal_places=2, max_digits=5)),
                ('gpa_points', models.DecimalField(decimal_places=2, max_digits=3)),
                ('description', models.CharField(blank=True, max_length=50, null=True)),
                ('color', models.CharField(blank=True, max_length=20, null=True)),
                ('order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['order', '-min_percent'],
            },
        ),
        migrations.CreateModel(
            name='GradingScale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_default', models.BooleanField(default=False)),
                ('academic_term', models.CharField(blank=True, max_length=50, null=True)),
                ('class_level', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField()),
                ('question_type', models.CharField(choices=[('MCQ', 'Multiple Choice'), ('TF', 'True/False'), ('SHORT', 'Short Answer'), ('LONG', 'Long Answer'), ('FILE', 'File Upload')], max_length=10)),
                ('points', models.PositiveIntegerField(default=1)),
                ('show_feedback', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags for categorizing questions', max_length=255, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='question_images/')),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='QuizAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attempt_number', models.PositiveSmallIntegerField(default=1)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('is_completed', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='ReportCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.CharField(max_length=20)),
                ('academic_year', models.CharField(max_length=10)),
                ('average_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('average_assignment_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('average_quiz_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('average_exam_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('overall_grade', models.CharField(blank=True, max_length=2, null=True)),
                ('teacher_comments', models.TextField(blank=True, null=True)),
                ('principal_comments', models.TextField(blank=True, null=True)),
                ('total_school_days', models.PositiveIntegerField(default=0)),
                ('days_present', models.PositiveIntegerField(default=0)),
                ('days_absent', models.PositiveIntegerField(default=0)),
                ('days_late', models.PositiveIntegerField(default=0)),
                ('responsibility_rating', models.CharField(blank=True, max_length=1, null=True)),
                ('organization_rating', models.CharField(blank=True, max_length=1, null=True)),
                ('independent_work_rating', models.CharField(blank=True, max_length=1, null=True)),
                ('collaboration_rating', models.CharField(blank=True, max_length=1, null=True)),
                ('initiative_rating', models.CharField(blank=True, max_length=1, null=True)),
                ('conduct_rating', models.CharField(blank=True, max_length=1, null=True)),
                ('is_promoted', models.BooleanField(default=True)),
                ('promotion_notes', models.TextField(blank=True, null=True)),
                ('generated_date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ReportCardSubjectGrade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assignment_score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('quiz_score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('exam_score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('total_score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('letter_grade', models.CharField(max_length=2)),
                ('remarks', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_answer', models.TextField(blank=True, null=True)),
                ('file_answer', models.FileField(blank=True, null=True, upload_to='student_answers/')),
                ('is_correct', models.BooleanField(default=False)),
                ('points_earned', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
            ],
        ),
        migrations.CreateModel(
            name='StudentQuizAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_answer', models.TextField(blank=True, null=True)),
                ('file_answer', models.FileField(blank=True, null=True, upload_to='student_quiz_answers/')),
                ('is_correct', models.BooleanField(default=False)),
                ('points_earned', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentQuizChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='StudentQuizQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=0)),
                ('answer_saved', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='StudentQuizVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attempt_number', models.PositiveSmallIntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('current_question_index', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StudentSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submission_date', models.DateTimeField(auto_now_add=True)),
                ('file_submission', models.FileField(blank=True, null=True, upload_to='student_submissions/')),
                ('text_submission', models.TextField(blank=True, null=True)),
                ('is_graded', models.BooleanField(default=False)),
                ('score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('feedback', models.TextField(blank=True, null=True)),
            ],
        ),
    ]
